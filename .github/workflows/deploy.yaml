name: 'Terraform'

on:
  push:
    branches:
      - main
env:
  ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}      

jobs:
  servicebus:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ./servicebus

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
  

      - name: Terraform Plan
        run: terraform plan  
        working-directory: ./servicebus
      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        # if: github.event_name == 'pull_request'
        run: terraform apply --auto-approve 
        working-directory: ./servicebus  
 
  
  elasticsearch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ./elasticsearch

      - name: Terraform Plan
        if: github.ref == 'refs/heads/main'
        run: terraform plan  
        working-directory: ./elasticsearch

      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main'
      #   run: terraform apply --auto-approve 
      #   working-directory: ./servicebus  
      
      # - name: Terraform Destroy
      #   run: terraform destroy --auto-approve 
      #   working-directory: ./servicebus 


      # - name: Terraform Apply
      #   run: terraform apply -auto-approve
      #   working-directory: ./servicebus
        # env:
        #   ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
        #   ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
        #   ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
        #   ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
